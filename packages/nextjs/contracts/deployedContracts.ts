/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0x12975173b87f7595ee45dffb2ab812ece596bf84",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "acknowledgeCase",
          inputs: [
            {
              name: "_caseId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_updateMessage",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addProgressUpdate",
          inputs: [
            {
              name: "_caseId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_updateMessage",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "caseCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "cases",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "citizenReporter",
              type: "address",
              internalType: "address",
            },
            {
              name: "assignedPolice",
              type: "address",
              internalType: "address",
            },
            {
              name: "verifyingJudicial",
              type: "address",
              internalType: "address",
            },
            {
              name: "timestampFiled",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "timestampLastUpdate",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "caseDetails",
              type: "string",
              internalType: "string",
            },
            {
              name: "location",
              type: "string",
              internalType: "string",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum YourContract.CaseStatus",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "closeCase",
          inputs: [
            {
              name: "_caseId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_finalReport",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "fileReport",
          inputs: [
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_location",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getCaseDetails",
          inputs: [
            {
              name: "_caseId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct YourContract.CaseReport",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "citizenReporter",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "assignedPolice",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "verifyingJudicial",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "timestampFiled",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "timestampLastUpdate",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "caseDetails",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "location",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum YourContract.CaseStatus",
                },
                {
                  name: "publicUpdates",
                  type: "string[]",
                  internalType: "string[]",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalCases",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "governor",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "grantJudicialRole",
          inputs: [
            {
              name: "_judicialWallet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "grantPoliceRole",
          inputs: [
            {
              name: "_policeWallet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "isJudicial",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isPolice",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "resetAllComplaints",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeJudicialRole",
          inputs: [
            {
              name: "_judicialWallet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokePoliceRole",
          inputs: [
            {
              name: "_policeWallet",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "verifyClosure",
          inputs: [
            {
              name: "_caseId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_verificationMessage",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "CaseUpdated",
          inputs: [
            {
              name: "caseId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "newStatus",
              type: "uint8",
              indexed: false,
              internalType: "enum YourContract.CaseStatus",
            },
            {
              name: "updateMessage",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
